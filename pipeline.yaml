AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
    Default: DevTest
  GitHubOwner:
    Description: GitHub repo owner
    Type: String
    Default: DevNickOps
  GitHubRepo:
    Description: GitHub repo
    Type: String
    Default: DevTest1
  GitHubBranch:
    Description: GitHub repo branch
    Type: String
    Default: master
  InfraStackName:
    Description: infrastructure stack name
    Type: String
    Default: infrastructure
  APPStackName:
    Description: APP stack name
    Type: String
    Default: fargate

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: GithubSource
          Actions:
            - Name: GithubSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: 'faa94f968f61700eef30044b8fea4bcefbf29ca6'
              OutputArtifacts:
                - Name: GithubSource
              RunOrder: '1'
        - Name: DeplyInfrastructure
          Actions:
            - Name: DeplyInfrastructure
              InputArtifacts:
                - Name: GithubSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref InfraStackName
                TemplatePath: "GithubSource::infrastructure.yaml"
                Capabilities: CAPABILITY_IAM
              RunOrder: '2'
        - Name: DeplyApp
          Actions:
            - Name: DeplyApp
              InputArtifacts:
                - Name: GithubSource
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref APPStackName
                TemplatePath: "GithubSource::fargate.yaml"
                Capabilities: CAPABILITY_IAM
              RunOrder: '3' 
  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: AdministratorAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: '*'
                Effect: Allow
                Resource: '*'             
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:*'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'   